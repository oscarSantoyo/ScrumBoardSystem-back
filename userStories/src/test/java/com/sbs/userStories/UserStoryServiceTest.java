/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.sbs.userStories;

import com.sbs.contracts.dto.UserStoryDTO;
import com.sbs.userStories.services.UserStoryService;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import java.util.HashSet;
import java.util.stream.StreamSupport;

@RunWith(SpringJUnit4ClassRunner.class)
@SpringBootTest(classes = UserStoriesApplication.class)
public class UserStoryServiceTest {

    @Autowired
    private UserStoryService userStoryService;

    @Test
    public void testUserStoryCreation() {
        UserStoryDTO storyToAdd = new UserStoryDTO.Builder()
                .withDescription("Description")
                .withTitle("Title")
                .withWeight(0)
                .withLabels(new HashSet<>())
                .withTasks(new HashSet<>())
                .build();
        UserStoryDTO userStoryCreated = userStoryService.createUserStory(storyToAdd);
        Assert.assertNotNull(userStoryCreated);
        Assert.assertTrue(userStoryCreated.getLabels().isEmpty());
        Assert.assertTrue(userStoryCreated.getTasks().isEmpty());
        Assert.assertEquals(storyToAdd.getTitle(), userStoryCreated.getTitle());
    }

    @Test
    public void testGetAllUsersStories() {
        UserStoryDTO storyToAdd = new UserStoryDTO.Builder()
            .withDescription("Description")
            .withTitle("Title")
            .withWeight(0)
            .withLabels(new HashSet<>())
            .withTasks(new HashSet<>())
            .build();
        userStoryService.createUserStory(storyToAdd);
        userStoryService.createUserStory(storyToAdd);
        userStoryService.createUserStory(storyToAdd);
        userStoryService.createUserStory(storyToAdd);
        Assert.assertEquals(14, StreamSupport.stream(userStoryService.getAllUserStories().spliterator(), false).count());
    }
}
